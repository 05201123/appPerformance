代码走查的点


关注的方面：
	1.内存泄漏或溢出。
		a）Activity资源的生命周期被延长，
			比如activity生命周期扩展到Application的生命周期。
			比如activity生命周期扩展到static。
		b）其他占了内存的大数据的生命周期的控制。
			这团大数据何时更新，何时释放，如何使用
		c）资源的释放
			cursor的释放
			输入输出流的释放。
	2.代码的适用性。
		a）多版本api的差异性。争取合适的版本用合适的api，避免利用过高api，导致低版本手机异常。
			比如 notifycaiton的创建，比如dialog的创建，比如activity.isDestoryed()的调用。
			比如android 5.0以上不支持service的隐式启动。
		b）代码对于不同手机的适配。
			比如 部分三星手机把软键盘的默认值设置修改了。
			比如 小米，魅族等手机对手机休眠的优化。

	3.代码的扩展性。
		a）代码结构上的查看。职责明显
			主要是根据经验。
		b）代码的复用
			主要是根据经验。
		c）代码的逻辑清晰，层级分明。
			主要是根据经验。
	4.代码的健壮性。
		a）多场景性代码是否正确可用（横向）
			比如临时来电话，
			比如页面被手机回收。
		b）临界条件下代码是否正确
			比如无数据展示
			比如有数据数据为空展示
		c）多线程下，代码的健壮（能不沾多线程就不要沾）
	5.代码的性能。
		a）循环某些场景下无法退出
		b）频繁创建对象，频繁使用的内存，可以运用缓存
			比如message对象，不要用 new message
		c）对象的复用
			比如adatper 中convertview
		d）比如String的操作，太多此拼接可以用stringbuilder
	

	6.其他的一些常见的错误。
		a）有可能的异常，比如空指针
		b）if else判断覆盖场景不足，存在缺陷啊
		。。。